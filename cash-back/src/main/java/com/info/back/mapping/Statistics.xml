<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.info.back.dao.IStatisticsDao">

    <select id="doTrackStatistics" resultType="com.info.web.pojo.TrackStatistics">
        select
        t2.dt AS 'dispatchTime', -- 派单时间
        t2.gl AS 'groupLevel', -- 催收组编号
        t2.cmid AS 'companyId',-- 催收公司代号
        t2.cmn AS 'companyName', -- 催收公司名称
        t2.uuid AS 'uuid',-- 催收员id
        t2.cpn AS 'backUserName', -- 催收员姓名

        ifnull(sum(t2.rcbj), 0) AS 'totalPrincipal', -- 入催本金
        ifnull(sum(t2.chbj), 0) AS 'realgetTotalPrincipal', -- 催回本金
        IFNULL(ROUND(ifnull(sum(t2.chbj), 0)/ifnull(sum(t2.rcbj), 0)*100,2),0) AS 'repaymentProbability', -- 本金催回率

        ifnull(sum(t2.rcznj), 0) AS 'totalPenalty', -- 入催滞纳金
        ifnull(sum(t2.chznj), 0) AS 'realgetTotalPenalty', -- 催回滞纳金
        IFNULL(ROUND(ifnull(sum(t2.chznj), 0)/ifnull(sum(t2.rcznj), 0)*100,2),0)AS 'penaltyProbability', -- 滞纳金催回率

        ifnull(sum(t2.cjsl), 0)AS 'handleCount'  -- 催记数量


        from

        (
        -- s1入催本金、入催滞纳金
        SELECT
        lo.loan_id id, -- (和ul.id是一样的)
        date(lo.create_date) dt, -- S1时入催时间
        3 gl,
        cmp.id cmid, -- 催收公司代号
        cmp.title cmn, -- 催收公司名称
        lo.current_collection_user_id uuid, -- 催收员uuid
        usr.id cpid, -- 催收员id
        usr.user_name cpn, -- 催收员姓名
        ul.loan_money + ul.service_charge rcbj, -- S1入催本金
        ul.loan_penalty rcznj, -- s1入催滞纳金
        0 chbj,
        0 chznj,
        0 cjsl
        from mman_user_loan ul
        left join mman_loan_collection_order lo on ul.id = lo.loan_id
        left join back_user usr on lo.current_collection_user_id = usr.uuid
        left join mman_loan_collection_company cmp on usr.company_id = cmp.id
        where 1=1
        and usr.group_level in (3,4)
        and usr.status = 1
        and ul.borrowing_type = 2
        and <![CDATA[ ul.create_time <= DATE_ADD(date_add(curdate(), interval +1 month),interval -day(date_add(curdate(), interval +1 month))+1 day) ]]>
        and <![CDATA[ ul.create_time >= DATE_ADD(curdate(),interval -day(curdate())+1 day)]]>
        group by lo.loan_id

        union all

        -- S2入催本金
        select
        t1.id,t1.dt,t1.gl,t1.cmid,t1.cmn,t1.uuid,t1.cpid,t1.cpn,
        sum(t1.a+t1.b) rcbj, -- S2总入催本金
        0 rcznj,
        0 chbj,
        0 chznj,
        0 cjsl
        from
        (
        select
        ul.id id,
        date(lo.dispatch_time) dt, -- S2时是派单时间
        usr.group_level gl, -- 催收组编号
        cmp.id cmid, -- 催收公司代号
        cmp.title cmn, -- 催收公司名称
        lo.current_collection_user_id uuid, -- 催收员uuid
        usr.id cpid, -- 催收员id
        usr.user_name cpn, -- 催收员姓名
        if(ul.paid_money > 0,sum(ul.loan_money + ul.service_charge - p.realget_principle), sum(ul.loan_money - p.realget_principle)) a, -- 剩余应还本金
        0 b
        from mman_loan_collection_order lo
        left join back_user usr on usr.uuid = lo.current_collection_user_id
        left join mman_loan_collection_company cmp on usr.company_id = cmp.id
        left join mman_user_loan ul ON ul.id = lo.loan_id
        left join credit_loan_pay p on p.id = lo.pay_id
        where 1=1
        and usr.group_level in (4)
        and usr.status = 1
        and lo.status != 4
        and ul.borrowing_type = 2
        and <![CDATA[ ul.create_time <= DATE_ADD(date_add(curdate(), interval +1 month),interval -day(date_add(curdate(), interval +1 month))+1 day)]]>
        and <![CDATA[ul.create_time >= DATE_ADD(curdate(),interval -day(curdate())+1 day) ]]>
        group by ul.id

        union ALL

        SELECT
        a.id id,a.dt,a.gl,a.cmid,a.cmn,a.uuid,a.cpid,a.cpn,
        0 a,
        ifnull(sum(a.real_money),0) as b
        FROM
        (
        SELECT
        ul.id id,
        date(lo.dispatch_time) dt, -- S2时是派单时间
        usr.group_level gl, -- 催收组编号
        cmp.id cmid, -- 催收公司代号
        cmp.title cmn, -- 催收公司名称
        ch.current_collection_user_id uuid, -- 催收员uuid
        usr.id cpid, -- 催收员id
        usr.user_name cpn, -- 催收员姓名
        sum(d.real_money) real_money -- 催回本金
        from mman_loan_collection_order lo
        left join mman_loan_collection_status_change_log ch on ch.loan_collection_order_id = lo.order_id
        left join back_user usr on usr.uuid = ch.current_collection_user_id
        left join credit_loan_pay_detail d on (d.pay_id = lo.pay_id and d.current_collection_user_id = usr.uuid)
        left join mman_loan_collection_company cmp on usr.company_id = cmp.id
        left join mman_user_loan ul ON ul.id = lo.loan_id
        where 1=1
        and usr.group_level in (4)
        and d.update_Date >= ch.create_date
        and usr.`status` = 1
        AND usr.role_id = '10021'
        and ul.borrowing_type = 2
        and <![CDATA[ ul.create_time <= DATE_ADD(date_add(curdate(), interval +1 month),interval -day(date_add(curdate(), interval +1 month))+1 day)]]>
        and <![CDATA[ul.create_time >= DATE_ADD(curdate(),interval -day(curdate())+1 day)]]>
        and ch.after_status not in (4)
        group by ul.id
        ) a
        group by a.id
        ) t1
        group by t1.id

        union all

        -- M1及以上等级入催本金
        select
        t1.id,t1.dt,t1.gl,t1.cmid,t1.cmn,t1.uuid,t1.cpid,t1.cpn,
        sum(t1.a+t1.b) rcbj, -- S2总入催本金
        0 rcznj,
        0 chbj,
        0 chznj,
        0 cjsl
        from
        (
        select
        ul.id id,
        date(lo.dispatch_time) dt, -- S2时是派单时间
        usr.group_level gl, -- 催收组编号
        cmp.id cmid, -- 催收公司代号
        cmp.title cmn, -- 催收公司名称
        lo.current_collection_user_id uuid, -- 催收员uuid
        usr.id cpid, -- 催收员id
        usr.user_name cpn, -- 催收员姓名
        if(ul.paid_money > 0,sum(ul.loan_money + ul.service_charge - p.realget_principle), sum(ul.loan_money - p.realget_principle)) a, -- 剩余应还本金
        0 b
        from mman_loan_collection_order lo
        left join back_user usr on usr.uuid = lo.current_collection_user_id
        left join mman_loan_collection_company cmp on usr.company_id = cmp.id
        left join mman_user_loan ul ON ul.id = lo.loan_id
        left join credit_loan_pay p on p.id = lo.pay_id
        where 1=1
        and usr.group_level in (5,6,7)
        and usr.status = 1
        and lo.status != 4
        and ul.borrowing_type = 2
        and lo.dispatch_time >= DATE_ADD(curdate(),interval -day(curdate())+1 day)
        group by ul.id

        union ALL

        SELECT
        a.id id,a.dt,a.gl,a.cmid,a.cmn,a.uuid,a.cpid,a.cpn,
        0 a,
        ifnull(sum(a.real_money),0) as b
        FROM
        (
        SELECT
        ul.id id,
        date(lo.dispatch_time) dt, -- S2时是派单时间
        usr.group_level gl, -- 催收组编号
        cmp.id cmid, -- 催收公司代号
        cmp.title cmn, -- 催收公司名称
        ch.current_collection_user_id uuid, -- 催收员uuid
        usr.id cpid, -- 催收员id
        usr.user_name cpn, -- 催收员姓名
        sum(d.real_money) real_money -- 催回本金
        from mman_loan_collection_order lo
        left join mman_loan_collection_status_change_log ch on ch.loan_collection_order_id = lo.order_id
        left join back_user usr on usr.uuid = ch.current_collection_user_id
        left join credit_loan_pay_detail d on (d.pay_id = lo.pay_id and d.current_collection_user_id = usr.uuid)
        left join mman_loan_collection_company cmp on usr.company_id = cmp.id
        left join mman_user_loan ul ON ul.id = lo.loan_id
        where 1=1
        and usr.group_level in (5,6,7)
        and d.update_Date >= ch.create_date
        and usr.`status` = 1
        AND usr.role_id = '10021'
        and ul.borrowing_type = 2
        and lo.dispatch_time >= DATE_ADD(curdate(),interval -day(curdate())+1 day)
        and ch.after_status not in (4)
        group by ul.id
        ) a
        group by a.id
        ) t1
        group by t1.id

        union all

        -- S2入催滞纳金（总滞纳金 - s1阶段催回的滞纳金）
        select
        t1.id,t1.dt,t1.gl,t1.cmid,t1.cmn,t1.uuid,t1.cpid,t1.cpn,
        0 rcbj,
        (sum(t1.rcznj) - sum(t2.yhznj)) rcznj,
        0 chbj,
        0 chznj,
        0 cjsl

        from
        (
        SELECT
        lo.loan_id id, -- (和ul.id是一样的)
        date(lo.dispatch_time) dt, -- S2时是派单时间
        usr.group_level gl, -- 催收组编号
        cmp.id cmid, -- 催收公司代号
        cmp.title cmn, -- 催收公司名称
        lo.current_collection_user_id uuid, -- 催收员uuid
        usr.id cpid, -- 催收员id
        usr.user_name cpn, -- 催收员姓名
        sum(ul.loan_penalty) rcznj, -- 总入催滞纳金
        0 yhznj
        from mman_user_loan ul
        left join mman_loan_collection_order lo on ul.id = lo.loan_id
        left join back_user usr on lo.current_collection_user_id = usr.uuid
        left join mman_loan_collection_company cmp on usr.company_id = cmp.id
        where 1=1
        and usr.group_level in (3,4)
        and usr.status = 1
        and ul.borrowing_type = 2
        and  <![CDATA[ ul.create_time <= DATE_ADD(date_add(curdate(), interval +1 month),interval -day(date_add(curdate(), interval +1 month))+1 day)]]>
        and <![CDATA[ ul.create_time >= DATE_ADD(curdate(),interval -day(curdate())+1 day)]]>
        group by lo.loan_id
        ) t1

        left join

        (
        SELECT
        lo.loan_id id, -- (和ul.id是一样的)
        date(lo.create_date) dt, -- S1时入催时间
        usr.group_level gl, -- 催收组编号
        cmp.id cmid, -- 催收公司代号
        cmp.title cmn, -- 催收公司名称
        d.current_collection_user_id uuid, -- 催收员uuid
        usr.id cpid, -- 催收员id
        usr.user_name cpn, -- 催收员姓名
        0 rcznj,
        sum(d.real_penlty) yhznj
        from mman_user_loan ul
        left join mman_loan_collection_order lo on ul.id = lo.loan_id
        left join credit_loan_pay_detail d on (lo.pay_id = d.pay_id)
        left join back_user usr on d.current_collection_user_id = usr.uuid
        left join mman_loan_collection_company cmp on usr.company_id = cmp.id
        where 1=1
        and usr.group_level in (3)
        and usr.status = 1
        and ul.borrowing_type = 2
        and <![CDATA[ ul.create_time <= DATE_ADD(date_add(curdate(), interval +1 month),interval -day(date_add(curdate(), interval +1 month))+1 day)]]>
        and <![CDATA[ ul.create_time >= DATE_ADD(curdate(),interval -day(curdate())+1 day)]]>
        group by lo.loan_id
        ) t2 on t1.id = t2.id
        where t1.gl = 4
        group by t1.id

        union all

        -- M1-M2入催滞纳金
        select
        t1.id,t1.dt,t1.gl,t1.cmid,t1.cmn,t1.uuid,t1.cpid,t1.cpn,
        0 rcbj,
        (sum(t1.rcznj) - sum(t2.yhznj)) rcznj,
        0 chbj,
        0 chznj,
        0 cjsl
        from
        (
        SELECT
        lo.loan_id id, -- (和ul.id是一样的)
        date(lo.dispatch_time) dt, -- S2时是派单时间
        usr.group_level gl, -- 催收组编号
        cmp.id cmid, -- 催收公司代号
        cmp.title cmn, -- 催收公司名称
        lo.current_collection_user_id uuid, -- 催收员uuid
        usr.id cpid, -- 催收员id
        usr.user_name cpn, -- 催收员姓名
        sum(ul.loan_penalty) rcznj, -- 总入催滞纳金
        0 yhznj
        from mman_user_loan ul
        left join mman_loan_collection_order lo on ul.id = lo.loan_id
        left join back_user usr on lo.current_collection_user_id = usr.uuid
        left join mman_loan_collection_company cmp on usr.company_id = cmp.id
        where 1=1
        and usr.group_level in (5)
        and usr.status = 1
        and ul.borrowing_type = 2
        and lo.dispatch_time >= DATE_ADD(curdate(),interval -day(curdate())+1 day)
        group by lo.loan_id
        ) t1

        left join

        (
        SELECT
        lo.loan_id id, -- (和ul.id是一样的)
        date(lo.create_date) dt, -- S1时入催时间
        usr.group_level gl, -- 催收组编号
        cmp.id cmid, -- 催收公司代号
        cmp.title cmn, -- 催收公司名称
        d.current_collection_user_id uuid, -- 催收员uuid
        usr.id cpid, -- 催收员id
        usr.user_name cpn, -- 催收员姓名
        0 rcznj,
        sum(d.real_penlty) yhznj
        from mman_user_loan ul
        left join mman_loan_collection_order lo on ul.id = lo.loan_id
        left join credit_loan_pay_detail d on (lo.pay_id = d.pay_id )
        left join back_user usr on d.current_collection_user_id = usr.uuid
        left join mman_loan_collection_company cmp on usr.company_id = cmp.id
        where 1=1
        and usr.group_level in (3,4)
        and usr.status = 1
        and ul.borrowing_type = 2
        and lo.dispatch_time >= DATE_ADD(curdate(),interval -day(curdate())+1 day)
        and d.update_Date >= DATE_ADD(date_add(curdate(), interval -1 month),interval -day(date_add(curdate(), interval -1 month))+1 day)
        and <![CDATA[ d.update_Date < DATE_ADD(curdate(),interval -day(curdate())+1 day) ]]>
        group by lo.loan_id
        ) t2 on t1.id = t2.id
        where t1.gl = 5
        group by t1.id

        union all

        -- M2-M3入催滞纳金
        select
        t1.id,
        t1.dt,
        t1.gl,
        t1.cmid,
        t1.cmn,
        t1.uuid,
        t1.cpid,
        t1.cpn,
        0 rcbj,
        (sum(t1.rcznj) - sum(t2.yhznj)) rcznj,
        0 chbj,
        0 chznj,
        0 cjsl

        from
        (
        SELECT
        lo.loan_id id, -- (和ul.id是一样的)
        date(lo.dispatch_time) dt, -- S2时是派单时间
        usr.group_level gl, -- 催收组编号
        cmp.id cmid, -- 催收公司代号
        cmp.title cmn, -- 催收公司名称
        lo.current_collection_user_id uuid, -- 催收员uuid
        usr.id cpid, -- 催收员id
        usr.user_name cpn, -- 催收员姓名
        sum(ul.loan_penalty) rcznj, -- 总入催滞纳金
        0 yhznj
        from mman_user_loan ul
        left join mman_loan_collection_order lo on ul.id = lo.loan_id
        left join back_user usr on lo.current_collection_user_id = usr.uuid
        left join mman_loan_collection_company cmp on usr.company_id = cmp.id
        where 1=1
        and usr.group_level in (6)
        and usr.status = 1
        and ul.borrowing_type = 2
        and lo.dispatch_time >= DATE_ADD(curdate(),interval -day(curdate())+1 day)
        group by lo.loan_id
        ) t1

        left join

        (
        SELECT
        lo.loan_id id, -- (和ul.id是一样的)
        date(lo.create_date) dt, -- S1时入催时间
        usr.group_level gl, -- 催收组编号
        cmp.id cmid, -- 催收公司代号
        cmp.title cmn, -- 催收公司名称
        d.current_collection_user_id uuid, -- 催收员uuid
        usr.id cpid, -- 催收员id
        usr.user_name cpn, -- 催收员姓名
        0 rcznj,
        sum(d.real_penlty) yhznj
        from mman_user_loan ul
        left join mman_loan_collection_order lo on ul.id = lo.loan_id
        left join credit_loan_pay_detail d on (lo.pay_id = d.pay_id )
        left join back_user usr on d.current_collection_user_id = usr.uuid
        left join mman_loan_collection_company cmp on usr.company_id = cmp.id
        where 1=1
        and usr.group_level in (3,4,5)
        and usr.status = 1
        and ul.borrowing_type = 2
        and lo.dispatch_time >= DATE_ADD(curdate(),interval -day(curdate())+1 day)
        and d.update_Date >= DATE_ADD(date_add(curdate(), interval -2 month),interval -day(date_add(curdate(), interval -2 month))+1 day)
        and <![CDATA[ d.update_Date < DATE_ADD(curdate(), interval -day(curdate())+1 day)]]>
        group by lo.loan_id
        ) t2 on t1.id = t2.id
        where t1.gl = 6
        group by t1.id

        union all

        -- M3+入催滞纳金
        select
        t1.id,
        t1.dt,
        t1.gl,
        t1.cmid,
        t1.cmn,
        t1.uuid,
        t1.cpid,
        t1.cpn,
        0 rcbj,
        (sum(t1.rcznj) - sum(t2.yhznj)) rcznj,
        0 chbj,
        0 chznj,
        0 cjsl

        from
        (
        SELECT
        lo.loan_id id, -- (和ul.id是一样的)
        date(lo.dispatch_time) dt, -- S2时是派单时间
        usr.group_level gl, -- 催收组编号
        cmp.id cmid, -- 催收公司代号
        cmp.title cmn, -- 催收公司名称
        lo.current_collection_user_id uuid, -- 催收员uuid
        usr.id cpid, -- 催收员id
        usr.user_name cpn, -- 催收员姓名
        sum(ul.loan_penalty) rcznj, -- 总入催滞纳金
        0 yhznj
        from mman_user_loan ul
        left join mman_loan_collection_order lo on ul.id = lo.loan_id
        left join back_user usr on lo.current_collection_user_id = usr.uuid
        left join mman_loan_collection_company cmp on usr.company_id = cmp.id
        where 1=1
        and usr.group_level in (7)
        and usr.status = 1
        and ul.borrowing_type = 2
        and lo.dispatch_time >= DATE_ADD(curdate(),interval -day(curdate())+1 day)
        group by lo.loan_id
        ) t1

        left join

        (
        SELECT
        lo.loan_id id, -- (和ul.id是一样的)
        date(lo.create_date) dt, -- S1时入催时间
        usr.group_level gl, -- 催收组编号
        cmp.id cmid, -- 催收公司代号
        cmp.title cmn, -- 催收公司名称
        d.current_collection_user_id uuid, -- 催收员uuid
        usr.id cpid, -- 催收员id
        usr.user_name cpn, -- 催收员姓名
        0 rcznj,
        sum(d.real_penlty) yhznj
        from mman_user_loan ul
        left join mman_loan_collection_order lo on ul.id = lo.loan_id
        left join credit_loan_pay_detail d on (lo.pay_id = d.pay_id )
        left join back_user usr on d.current_collection_user_id = usr.uuid
        left join mman_loan_collection_company cmp on usr.company_id = cmp.id
        where 1=1
        and usr.group_level in (3,4,5,6)
        and usr.status = 1
        and ul.borrowing_type = 2
        and lo.dispatch_time >= DATE_ADD(curdate(),interval -day(curdate())+1 day)
        and d.update_Date >= DATE_ADD(date_add(curdate(), interval -5 month),interval -day(date_add(curdate(), interval -5 month))+1 day)
        and <![CDATA[ d.update_Date < DATE_ADD(curdate(), interval -day(curdate())+1 day)]]>
        group by lo.loan_id
        ) t2 on t1.id = t2.id
        where t1.gl = 7
        group by t1.id

        union all

        -- s1催回本金
        SELECT
        lo.loan_id id, -- (和ul.id是一样的)
        date(lo.create_date) dt, -- S1时入催时间
        usr.group_level gl, -- 催收组编号
        cmp.id cmid, -- 催收公司代号
        cmp.title cmn, -- 催收公司名称
        d.current_collection_user_id uuid, -- 催收员uuid
        usr.id cpid, -- 催收员id
        usr.user_name cpn, -- 催收员姓名
        0 rcbj,
        0 rcznj,
        sum(d.real_money) chbj, -- 催回本金（仅计算s1)
        0 chznj,
        0 cjsl
        from mman_loan_collection_order lo
        left join mman_loan_collection_status_change_log ch on ch.loan_collection_order_id = lo.order_id
        left join back_user usr on usr.uuid = ch.current_collection_user_id
        left join mman_loan_collection_company cmp on usr.company_id = cmp.id
        left join credit_loan_pay_detail d on (d.pay_id = lo.pay_id and d.current_collection_user_id = usr.uuid)
        where 1=1
        and d.update_Date >= ch.create_date
        and usr.status = 1
        AND usr.role_id = '10021'
        and lo.create_date >= DATE_ADD(curdate(),interval -day(curdate())+1 day)
        AND <![CDATA[ lo.create_Date <= DATE_ADD(date_add(curdate(), interval +1 month),interval -day(date_add(curdate(), interval +1 month))+1 day)]]>
        AND d.update_Date >= DATE_ADD(curdate(),interval -day(curdate())+1 day)
        AND <![CDATA[ d.update_Date < DATE_ADD(date_add(curdate(), interval +1 month),interval -day(date_add(curdate(), interval +1 month))+2 day)]]>
        and ch.after_status not in (4)
        and usr.group_level in (3)
        group by lo.loan_id

        union all

        -- s2催回本金
        SELECT
        lo.loan_id id, -- (和ul.id是一样的)
        date(lo.dispatch_time) dt, -- S2时派单时间
        usr.group_level gl, -- 催收组编号
        cmp.id cmid, -- 催收公司代号
        cmp.title cmn, -- 催收公司名称
        d.current_collection_user_id uuid, -- 催收员uuid
        usr.id cpid, -- 催收员id
        usr.user_name cpn, -- 催收员姓名
        0 rcbj,
        0 rcznj,
        sum(d.real_money) chbj, -- 催回本金（仅计算s2)
        0 chznj,
        0 cjsl
        from mman_loan_collection_order lo
        left join mman_loan_collection_status_change_log ch on ch.loan_collection_order_id = lo.order_id
        left join back_user usr on usr.uuid = ch.current_collection_user_id
        left join mman_loan_collection_company cmp on usr.company_id = cmp.id
        left join credit_loan_pay_detail d on (d.pay_id = lo.pay_id and d.current_collection_user_id = usr.uuid)
        where 1=1
        and d.update_Date >= ch.create_date
        and usr.status = 1
        AND usr.role_id = '10021'
        and lo.create_date >= DATE_ADD(curdate(),interval -day(curdate())+1 day)
        AND <![CDATA[ lo.create_Date <= DATE_ADD(date_add(curdate(), interval +1 month),interval -day(date_add(curdate(), interval +1 month))+1 day)]]>
        AND d.update_Date >= DATE_ADD(curdate(),interval -day(curdate())+1 day)
        AND <![CDATA[ d.update_Date < DATE_ADD(date_add(curdate(), interval +1 month),interval -day(date_add(curdate(), interval +1 month))+2 day)]]>
        and ch.after_status not in (4)
        and usr.group_level in (4)
        group by lo.loan_id

        union all

        -- M1-M2、M2-M3催回本金
        SELECT
        lo.loan_id id, -- (和ul.id是一样的)
        date(lo.dispatch_time) dt, -- 派单时间
        usr.group_level gl, -- 催收组编号
        cmp.id cmid, -- 催收公司代号
        cmp.title cmn, -- 催收公司名称
        d.current_collection_user_id uuid, -- 催收员uuid
        usr.id cpid, -- 催收员id
        usr.user_name cpn, -- 催收员姓名
        0 rcbj,
        0 rcznj,
        sum(d.real_money) chbj, -- 催回本金
        0 chznj,
        0 cjsl
        from mman_loan_collection_order lo
        left join mman_loan_collection_status_change_log ch on ch.loan_collection_order_id = lo.order_id
        left join back_user usr on usr.uuid = ch.current_collection_user_id
        left join mman_loan_collection_company cmp on usr.company_id = cmp.id
        left join credit_loan_pay_detail d on (d.pay_id = lo.pay_id and d.current_collection_user_id = usr.uuid)
        where 1=1
        and d.update_Date >= ch.create_date
        and usr.status = 1
        AND usr.role_id = '10021'
        and lo.dispatch_time >= DATE_ADD(curdate(),interval -day(curdate())+1 day)
        AND <![CDATA[ lo.dispatch_time <= DATE_ADD(date_add(curdate(), interval +1 month),interval -day(date_add(curdate(), interval +1 month))+1 day) ]]>
        AND d.update_Date >= DATE_ADD(curdate(),interval -day(curdate())+1 day)
        AND <![CDATA[ d.update_Date < DATE_ADD(date_add(curdate(), interval +1 month),interval -day(date_add(curdate(), interval +1 month))+2 day) ]]>
        and ch.after_status not in (4)
        and usr.group_level in (5,6)
        group by lo.loan_id

        union all

        -- M3+催回本金
        SELECT
        lo.loan_id id, -- (和ul.id是一样的)
        date(lo.dispatch_time) dt, -- 派单时间
        usr.group_level gl, -- 催收组编号
        cmp.id cmid, -- 催收公司代号
        cmp.title cmn, -- 催收公司名称
        d.current_collection_user_id uuid, -- 催收员uuid
        usr.id cpid, -- 催收员id
        usr.user_name cpn, -- 催收员姓名
        0 rcbj,
        0 rcznj,
        sum(d.real_money) chbj, -- 催回本金
        0 chznj,
        0 cjsl
        from mman_loan_collection_order lo
        left join mman_loan_collection_status_change_log ch on ch.loan_collection_order_id = lo.order_id
        left join back_user usr on usr.uuid = ch.current_collection_user_id
        left join mman_loan_collection_company cmp on usr.company_id = cmp.id
        left join credit_loan_pay_detail d on (d.pay_id = lo.pay_id and d.current_collection_user_id = usr.uuid)
        where 1=1
        and d.update_Date >= ch.create_date
        and usr.status = 1
        AND usr.role_id = '10021'
        and lo.dispatch_time >= DATE_ADD(date_add(curdate(), interval -2 month),interval -day(date_add(curdate(), interval -2 month))+1 day)
        AND <![CDATA[ lo.dispatch_time <= DATE_ADD(date_add(curdate(), interval +1 month),interval -day(date_add(curdate(), interval +1 month))+1 day)]]>
        AND d.update_Date >= DATE_ADD(curdate(),interval -day(curdate())+1 day)
        AND <![CDATA[ d.update_Date < DATE_ADD(date_add(curdate(), interval +1 month),interval -day(date_add(curdate(), interval +1 month))+2 day)]]>
        and ch.after_status not in (4)
        and usr.group_level in (7)
        group by lo.loan_id

        union all

        -- s1催回滞纳金
        SELECT
        t1.id,t1.dt,t1.gl,t1.cmid,t1.cmn,t1.uuid,t1.cpid,t1.cpn,
        0 rcbj,
        0 rcznj,
        0 chbj,
        (sum(t1.shznj) + sum(t1.bjkh)) chznj,
        0 cjsl
        from
        (
        SELECT
        tt.id,tt.dt,tt.gl,tt.cmid,tt.cmn,tt.uuid,tt.cpid,tt.cpn,
        sum(tt.shznj) shznj,
        0 bjkh
        FROM
        (
        SELECT
        lo.loan_id id, -- (和ul.id是一样的)
        date(lo.create_date) dt, -- S1时入催时间
        usr.group_level gl, -- 催收组编号
        cmp.id cmid, -- 催收公司代号
        cmp.title cmn, -- 催收公司名称
        d.current_collection_user_id uuid, -- 催收员uuid
        usr.id cpid, -- 催收员id
        usr.user_name cpn, -- 催收员姓名
        sum(d.real_penlty) - p.reduction_money AS shznj-- '实际还款滞纳金'
        FROM mman_loan_collection_order lo
        LEFT JOIN credit_loan_pay_detail d ON lo.pay_id = d.pay_id
        LEFT JOIN back_user usr ON usr.uuid = d.current_collection_user_id
        left join mman_loan_collection_company cmp on usr.company_id = cmp.id
        left join mman_loan_collection_status_change_log ch on ch.loan_collection_order_id = lo.order_id
        LEFT JOIN credit_loan_pay p ON lo.pay_id = p.id
        WHERE 1=1
        AND lo.status = '4'
        AND p.remain_accrual IS NULL
        and d.update_Date >= ch.create_date
        and usr.status = 1
        AND usr.role_id = '10021'
        and lo.create_date >= DATE_ADD(curdate(),interval -day(curdate())+1 day)
        AND <![CDATA[ lo.create_Date <= DATE_ADD(date_add(curdate(), interval +1 month),interval -day(date_add(curdate(), interval +1 month))+1 day) ]]>
        AND d.update_Date >= DATE_ADD(curdate(),interval -day(curdate())+1 day)
        AND <![CDATA[ d.update_Date < DATE_ADD(date_add(curdate(), interval +1 month),interval -day(date_add(curdate(), interval +1 month))+2 day)]]>
        and ch.after_status not in (4)
        and usr.group_level in (3)
        GROUP BY lo.loan_id
        ) tt
        GROUP BY tt.id

        union all

        SELECT
        lo.loan_id id, -- (和ul.id是一样的)
        date(lo.create_date) dt, -- S1时入催时间
        usr.group_level gl, -- 催收组编号
        cmp.id cmid, -- 催收公司代号
        cmp.title cmn, -- 催收公司名称
        lo.current_collection_user_id uuid, -- 催收员uuid
        usr.id cpid, -- 催收员id
        usr.user_name cpn, -- 催收员姓名
        0 shznj,
        sum(c.reduction_money) bjkh -- 不计入考核的减免滞纳金
        FROM mman_loan_collection_order lo
        LEFT JOIN back_user usr ON lo.current_collection_user_id = usr.uuid
        left join mman_loan_collection_company cmp on usr.company_id = cmp.id
        LEFT JOIN audit_center c ON lo.loan_id = c.loan_id
        LEFT JOIN credit_loan_pay p ON lo.pay_id = p.id
        WHERE 1=1
        and usr.status = 1
        AND lo.status = '4'
        AND c.status = '5'
        AND c.type = '3'
        AND p.update_Date >= DATE_ADD(curdate(),interval -day(curdate())+1 day)
        AND <![CDATA[ p.update_Date <= DATE_ADD(date_add(curdate(), interval +1 month),interval -day(date_add(curdate(), interval +1 month))+1 day) ]]>
        and usr.group_level in (3)
        GROUP BY usr.id
        ) t1
        group by t1.id

        union all

        -- s2催回滞纳金
        SELECT
        t1.id,t1.dt,t1.gl,t1.cmid,t1.cmn,t1.uuid,t1.cpid,t1.cpn,
        0 rcbj,
        0 rcznj,
        0 chbj,
        (sum(t1.shznj) + sum(t1.bjkh)) chznj,
        0 cjsl
        from
        (
        SELECT
        tt.id,tt.dt,tt.gl,tt.cmid,tt.cmn,tt.uuid,tt.cpid,tt.cpn,
        sum(tt.shznj) shznj,
        0 bjkh
        FROM
        (
        SELECT
        lo.loan_id id, -- (和ul.id是一样的)
        date(lo.dispatch_time) dt, -- S1时派单时间
        usr.group_level gl, -- 催收组编号
        cmp.id cmid, -- 催收公司代号
        cmp.title cmn, -- 催收公司名称
        d.current_collection_user_id uuid, -- 催收员uuid
        usr.id cpid, -- 催收员id
        usr.user_name cpn, -- 催收员姓名
        sum(d.real_penlty) - p.reduction_money AS shznj-- '实际还款滞纳金'
        FROM mman_loan_collection_order lo
        LEFT JOIN credit_loan_pay_detail d ON lo.pay_id = d.pay_id
        LEFT JOIN back_user usr ON usr.uuid = d.current_collection_user_id
        left join mman_loan_collection_company cmp on usr.company_id = cmp.id
        left join mman_loan_collection_status_change_log ch on ch.loan_collection_order_id = lo.order_id
        LEFT JOIN credit_loan_pay p ON lo.pay_id = p.id
        WHERE 1=1
        AND lo.status = '4'
        AND p.remain_accrual IS NULL
        and d.update_Date >= ch.create_date
        and usr.status = 1
        AND usr.role_id = '10021'
        and lo.create_date >= DATE_ADD(curdate(),interval -day(curdate())+1 day)
        AND <![CDATA[ lo.create_Date <= DATE_ADD(date_add(curdate(), interval +1 month),interval -day(date_add(curdate(), interval +1 month))+1 day)]]>
        AND d.update_Date >= DATE_ADD(curdate(),interval -day(curdate())+1 day)
        AND <![CDATA[ d.update_Date < DATE_ADD(date_add(curdate(), interval +1 month),interval -day(date_add(curdate(), interval +1 month))+2 day) ]]>
        and ch.after_status not in (4)
        and usr.group_level in (4)
        GROUP BY lo.loan_id
        ) tt
        GROUP BY tt.id

        union all

        SELECT
        lo.loan_id id, -- (和ul.id是一样的)
        date(lo.dispatch_time) dt, -- S1时派单时间
        usr.group_level gl, -- 催收组编号
        cmp.id cmid, -- 催收公司代号
        cmp.title cmn, -- 催收公司名称
        lo.current_collection_user_id uuid, -- 催收员uuid
        usr.id cpid, -- 催收员id
        usr.user_name cpn, -- 催收员姓名
        0 shznj,
        sum(c.reduction_money) bjkh -- 不计入考核的减免滞纳金
        FROM mman_loan_collection_order lo
        LEFT JOIN back_user usr ON lo.current_collection_user_id = usr.uuid
        left join mman_loan_collection_company cmp on usr.company_id = cmp.id
        LEFT JOIN audit_center c ON lo.loan_id = c.loan_id
        LEFT JOIN credit_loan_pay p ON lo.pay_id = p.id
        WHERE 1=1
        and usr.status = 1
        AND lo.status = '4'
        AND c.status = '5'
        AND c.type = '3'
        AND p.update_Date >= DATE_ADD(curdate(),interval -day(curdate())+1 day)
        AND <![CDATA[ p.update_Date <= DATE_ADD(date_add(curdate(), interval +1 month),interval -day(date_add(curdate(), interval +1 month))+1 day)]]>
        and usr.group_level in (4)
        GROUP BY usr.id
        ) t1
        group by t1.id

        union all

        -- M1-M2、M2-M3催回滞纳金
        SELECT
        t1.id,t1.dt,t1.gl,t1.cmid,t1.cmn,t1.uuid,t1.cpid,t1.cpn,
        0 rcbj,
        0 rcznj,
        0 chbj,
        (sum(t1.shznj) + sum(t1.bjkh)) chznj,
        0 cjsl
        from
        (
        SELECT
        tt.id,tt.dt,tt.gl,tt.cmid,tt.cmn,tt.uuid,tt.cpid,tt.cpn,
        sum(tt.shznj) shznj,
        0 bjkh
        FROM
        (
        SELECT
        lo.loan_id id, -- (和ul.id是一样的)
        date(lo.dispatch_time) dt, -- S1时派单时间
        usr.group_level gl, -- 催收组编号
        cmp.id cmid, -- 催收公司代号
        cmp.title cmn, -- 催收公司名称
        d.current_collection_user_id uuid, -- 催收员uuid
        usr.id cpid, -- 催收员id
        usr.user_name cpn, -- 催收员姓名
        sum(d.real_penlty) - p.reduction_money AS shznj-- '实际还款滞纳金'
        FROM mman_loan_collection_order lo
        LEFT JOIN credit_loan_pay_detail d ON lo.pay_id = d.pay_id
        LEFT JOIN back_user usr ON usr.uuid = d.current_collection_user_id
        left join mman_loan_collection_company cmp on usr.company_id = cmp.id
        left join mman_loan_collection_status_change_log ch on ch.loan_collection_order_id = lo.order_id
        LEFT JOIN credit_loan_pay p ON lo.pay_id = p.id
        WHERE 1=1
        AND lo.status = '4'
        AND p.remain_accrual IS NULL
        and d.update_Date >= ch.create_date
        and usr.status = 1
        AND usr.role_id = '10021'
        and lo.dispatch_time >= DATE_ADD(curdate(),interval -day(curdate())+1 day)
        AND <![CDATA[ lo.dispatch_time <= DATE_ADD(date_add(curdate(), interval +1 month),interval -day(date_add(curdate(), interval +1 month))+1 day)]]>
        AND d.update_Date >= DATE_ADD(curdate(),interval -day(curdate())+1 day)
        AND <![CDATA[ d.update_Date < DATE_ADD(date_add(curdate(), interval +1 month),interval -day(date_add(curdate(), interval +1 month))+2 day)]]>
        and ch.after_status not in (4)
        and usr.group_level in (5,6)
        GROUP BY lo.loan_id
        ) tt
        GROUP BY tt.id

        union all

        SELECT
        lo.loan_id id, -- (和ul.id是一样的)
        date(lo.dispatch_time) dt, -- S1时派单时间
        usr.group_level gl, -- 催收组编号
        cmp.id cmid, -- 催收公司代号
        cmp.title cmn, -- 催收公司名称
        lo.current_collection_user_id uuid, -- 催收员uuid
        usr.id cpid, -- 催收员id
        usr.user_name cpn, -- 催收员姓名
        0 shznj,
        sum(c.reduction_money) bjkh -- 不计入考核的减免滞纳金
        FROM mman_loan_collection_order lo
        LEFT JOIN back_user usr ON lo.current_collection_user_id = usr.uuid
        left join mman_loan_collection_company cmp on usr.company_id = cmp.id
        LEFT JOIN audit_center c ON lo.loan_id = c.loan_id
        LEFT JOIN credit_loan_pay p ON lo.pay_id = p.id
        WHERE 1=1
        and usr.status = 1
        AND lo.status = '4'
        AND c.status = '5'
        AND c.type = '3'
        AND p.update_Date >= DATE_ADD(curdate(),interval -day(curdate())+1 day)
        AND <![CDATA[ p.update_Date <= DATE_ADD(date_add(curdate(), interval +1 month),interval -day(date_add(curdate(), interval +1 month))+1 day) ]]>
        and usr.group_level in (5,6)
        GROUP BY usr.id
        ) t1
        group by t1.id

        union all

        -- M3+催回滞纳金
        SELECT
        t1.id,t1.dt,t1.gl,t1.cmid,t1.cmn,t1.uuid,t1.cpid,t1.cpn,
        0 rcbj,
        0 rcznj,
        0 chbj,
        (sum(t1.shznj) + sum(t1.bjkh)) chznj,
        0 cjsl
        from
        (
        SELECT
        tt.id,tt.dt,tt.gl,tt.cmid,tt.cmn,tt.uuid,tt.cpid,tt.cpn,
        sum(tt.shznj) shznj,
        0 bjkh
        FROM
        (
        SELECT
        lo.loan_id id, -- (和ul.id是一样的)
        date(lo.dispatch_time) dt, -- S1时派单时间
        usr.group_level gl, -- 催收组编号
        cmp.id cmid, -- 催收公司代号
        cmp.title cmn, -- 催收公司名称
        d.current_collection_user_id uuid, -- 催收员uuid
        usr.id cpid, -- 催收员id
        usr.user_name cpn, -- 催收员姓名
        sum(d.real_penlty) - p.reduction_money AS shznj-- '实际还款滞纳金'
        FROM mman_loan_collection_order lo
        LEFT JOIN credit_loan_pay_detail d ON lo.pay_id = d.pay_id
        LEFT JOIN back_user usr ON usr.uuid = d.current_collection_user_id
        left join mman_loan_collection_company cmp on usr.company_id = cmp.id
        left join mman_loan_collection_status_change_log ch on ch.loan_collection_order_id = lo.order_id
        LEFT JOIN credit_loan_pay p ON lo.pay_id = p.id
        WHERE 1=1
        AND lo.status = '4'
        AND p.remain_accrual IS NULL
        and d.update_Date >= ch.create_date
        and usr.status = 1
        AND usr.role_id = '10021'
        and lo.dispatch_time >= DATE_ADD(date_add(curdate(), interval -2 month),interval -day(date_add(curdate(), interval -2 month))+1 day)
        AND <![CDATA[lo.dispatch_time <= DATE_ADD(date_add(curdate(), interval +1 month),interval -day(date_add(curdate(), interval +1 month))+1 day)]]>
        AND d.update_Date >= DATE_ADD(curdate(),interval -day(curdate())+1 day)
        AND <![CDATA[ d.update_Date < DATE_ADD(date_add(curdate(), interval +1 month),interval -day(date_add(curdate(), interval +1 month))+2 day)]]>
        and ch.after_status not in (4)
        and usr.group_level in (7)
        GROUP BY lo.loan_id
        ) tt
        GROUP BY tt.id

        union all

        SELECT
        lo.loan_id id, -- (和ul.id是一样的)
        date(lo.dispatch_time) dt, -- S1时派单时间
        usr.group_level gl, -- 催收组编号
        cmp.id cmid, -- 催收公司代号
        cmp.title cmn, -- 催收公司名称
        lo.current_collection_user_id uuid, -- 催收员uuid
        usr.id cpid, -- 催收员id
        usr.user_name cpn, -- 催收员姓名
        0 shznj,
        sum(c.reduction_money) bjkh -- 不计入考核的减免滞纳金
        FROM mman_loan_collection_order lo
        LEFT JOIN back_user usr ON lo.current_collection_user_id = usr.uuid
        left join mman_loan_collection_company cmp on usr.company_id = cmp.id
        LEFT JOIN audit_center c ON lo.loan_id = c.loan_id
        LEFT JOIN credit_loan_pay p ON lo.pay_id = p.id
        WHERE 1=1
        and usr.status = 1
        AND lo.status = '4'
        AND c.status = '5'
        AND c.type = '3'
        AND p.update_Date >= DATE_ADD(curdate(),interval -day(curdate())+1 day)
        AND <![CDATA[ p.update_Date <= DATE_ADD(date_add(curdate(), interval +1 month),interval -day(date_add(curdate(), interval +1 month))+1 day)]]>
        and usr.group_level in (7)
        GROUP BY usr.id
        ) t1
        group by t1.id

        union all

        -- s1催记数量
        select
        ul.id id,
        date(lo.create_date) dt, -- S1时是入催时间
        usr.group_level gl, -- 催收组编号
        cmp.id cmid, -- 催收公司代号
        cmp.title cmn, -- 催收公司名称
        r.collection_id, -- 催收员uuid
        usr.id cpid, -- 催收员id
        usr.user_name cpn, -- 催收员姓名
        0 rcbj,
        0 rcznj,
        0 chbj,
        0 chznj,
        count(r.order_id)
        from mman_loan_collection_order lo
        left join mman_loan_collection_record r on r.loan_id = lo.loan_id
        left join back_user usr on usr.uuid = r.collection_id
        left join mman_loan_collection_company cmp on usr.company_id = cmp.id
        left join mman_user_loan ul ON ul.id = lo.loan_id
        where 1=1
        and usr.group_level in (3)
        and usr.status = 1
        and ul.borrowing_type = 2
        and <![CDATA[ ul.create_time <= DATE_ADD(date_add(curdate(), interval +1 month),interval -day(date_add(curdate(), interval +1 month))+1 day)]]>
        and ul.create_time >= DATE_ADD(curdate(),interval -day(curdate())+1 day)
        group by ul.id

        union all

        -- S2、M1-M2、M2-M3催记数量
        select
        ul.id id,
        date(lo.dispatch_time) dt, -- S1时是入催时间
        usr.group_level gl, -- 催收组编号
        cmp.id cmid, -- 催收公司代号
        cmp.title cmn, -- 催收公司名称
        r.collection_id uuid, -- 催收员uuid
        usr.id cpid, -- 催收员id
        usr.user_name cpn, -- 催收员姓名
        0 rcbj,
        0 rcznj,
        0 chbj,
        0 chznj,
        count(r.order_id)
        from mman_loan_collection_order lo
        left join mman_loan_collection_record r on r.loan_id = lo.loan_id
        left join back_user usr on usr.uuid = r.collection_id
        left join mman_loan_collection_company cmp on usr.company_id = cmp.id
        left join mman_user_loan ul ON ul.id = lo.loan_id
        where 1=1
        and usr.group_level in (4,5,6)
        and usr.status = 1
        and ul.borrowing_type = 2
        and <![CDATA[ lo.dispatch_time <= DATE_ADD(date_add(curdate(), interval +1 month),interval -day(date_add(curdate(), interval +1 month))+1 day)  ]]>
        and lo.dispatch_time >= DATE_ADD(curdate(),interval -day(curdate())+1 day)
        group by ul.id,gl

        union all

        -- M3+催记数量
        select
        ul.id id,
        date(lo.dispatch_time) dt, -- S1时是入催时间
        usr.group_level gl, -- 催收组编号
        cmp.id cmid, -- 催收公司代号
        cmp.title cmn, -- 催收公司名称
        r.collection_id uuid, -- 催收员uuid
        usr.id cpid, -- 催收员id
        usr.user_name cpn, -- 催收员姓名
        0 rcbj,
        0 rcznj,
        0 chbj,
        0 chznj,
        count(r.order_id)
        from mman_loan_collection_order lo
        left join mman_loan_collection_record r on r.loan_id = lo.loan_id
        left join back_user usr on usr.uuid = r.collection_id
        left join mman_loan_collection_company cmp on usr.company_id = cmp.id
        left join mman_user_loan ul ON ul.id = lo.loan_id
        where 1=1
        and usr.group_level in (7)
        and usr.status = 1
        and ul.borrowing_type = 2
        and <![CDATA[ lo.dispatch_time < DATE_ADD(date_add(curdate(), interval +1 month),interval -day(date_add(curdate(), interval +1 month))+1 day) ]]>
        and lo.dispatch_time >= DATE_ADD(date_add(curdate(), interval -2 month),interval -day(date_add(curdate(), interval -2 month))+1 day)
        group by ul.id
        ) t2

        group by t2.dt,t2.gl,t2.cmid,t2.cmn,t2.cpid,t2.cpn
        order by t2.dt,t2.gl,t2.cmid,t2.cmn,t2.cpid,t2.cpn
    </select>

    <insert id="insertTrackStatistics" parameterType="list">
        INSERT INTO track_statistics
        (dispatchTime, companyName, companyId,backUserName,uuid,groupLevel,totalPrincipal,realgetTotalPrincipal,repaymentProbability,totalPenalty,realgetTotalPenalty, penaltyProbability,handleCount,createDate)
        VALUES
        <foreach collection ="list" item="track" separator =",">
            (#{track.dispatchTime}, #{track.companyName}, #{track.companyId},#{track.backUserName},#{track.uuid},#{track.groupLevel},#{track.totalPrincipal},#{track.realgetTotalPrincipal},#{track.repaymentProbability},#{track.totalPenalty},#{track.realgetTotalPenalty},#{track.penaltyProbability},#{track.handleCount}, now())
        </foreach >
    </insert>

    <sql id="wherePersonColumn">
        <where>
            <if test="dispatchTime != null and dispatchTime != ''">
                AND <![CDATA[ DATE_FORMAT(s.dispatchTime ,'%Y-%m-%d') >= #{dispatchTime} ]]>
            </if>
            <if test="dispatchEndTime != null and dispatchEndTime != ''">
                AND <![CDATA[ DATE_FORMAT(s.dispatchTime ,'%Y-%m-%d') <= #{dispatchEndTime} ]]>
            </if>
            <if test="statisticsTime != null and statisticsTime != ''">
                AND <![CDATA[ DATE_FORMAT(s.createDate ,'%Y-%m-%d') = #{statisticsTime} ]]>
            </if>
            <if test="backUserName != null and backUserName != ''">
                AND s.backUserName = #{backUserName}
            </if>
            <if test="uuid != null and uuid != ''">
                AND s.uuid = #{uuid}
            </if>
            <if test="companyId != null and companyId != ''">
                AND s.companyId = #{companyId}
            </if>
            <if test="groupLevel != null and groupLevel != ''">
                AND s.groupLevel = #{groupLevel}
            </if>
            <if test="companys != null and companyId == null">
                AND s.companyId IN
                <foreach collection="companys" open="(" close=")" item="company" separator=",">
                    #{company.id}
                </foreach>
            </if>
        </where>
        GROUP BY
        s.backUserName,
        s.companyId,
        s.uuid,
        s.groupLevel

        <if test="orderBy != null and orderBy != ''">
            ORDER by ${orderBy}
        </if>
    </sql>
    <sql id="whereCompanyColumn">
        <where>
            <if test="dispatchTime != null and dispatchTime != ''">
                AND <![CDATA[ DATE_FORMAT(s.dispatchTime ,'%Y-%m-%d') >= #{dispatchTime} ]]>
            </if>
            <if test="dispatchEndTime != null and dispatchEndTime != ''">
                AND <![CDATA[ DATE_FORMAT(s.dispatchTime ,'%Y-%m-%d') <= #{dispatchEndTime} ]]>
            </if>
            <if test="statisticsTime != null and statisticsTime != ''">
                AND <![CDATA[ DATE_FORMAT(s.createDate ,'%Y-%m-%d') = #{statisticsTime} ]]>
            </if>
            <if test="companyId != null and companyId != ''">
                AND s.companyId = #{companyId}
            </if>
            <if test="groupLevel != null and groupLevel != ''">
                AND s.groupLevel = #{groupLevel}
            </if>
            <if test="companys != null and companyId == null">
                AND s.companyId IN
                <foreach collection="companys" open="(" close=")" item="company" separator=",">
                    #{company.id}
                </foreach>
            </if>
        </where>
        GROUP BY
        s.companyId,
        s.groupLevel

        <if test="orderBy != null and orderBy != ''">
            ORDER by ${orderBy}
        </if>
    </sql>
    <select id="cumulativeStatisticsPerson" resultType="com.info.web.pojo.TrackStatistics" parameterType="HashMap">
        SELECT
       s.companyName AS 'companyName',
       s.companyId AS 'companyId',
        s.groupLevel AS 'groupLevel',
       s.backUserName AS 'backUserName',
       s.uuid AS 'uuid',

       sum(s.totalPrincipal) AS 'totalPrincipal',
       sum(s.realgetTotalPrincipal) AS'realgetTotalPrincipal',
round(ifnull( sum(s.realgetTotalPrincipal)/ sum(s.totalPrincipal), 0) * 100,2) AS'repaymentProbability',


       sum(s.totalPenalty)AS'totalPenalty',
       sum(s.realgetTotalPenalty)AS'realgetTotalPenalty',
round(sum(s.realgetTotalPenalty) / sum(s.totalPenalty), 2) AS'penaltyProbability',


       sum(s.handleCount) AS 'handleCount'
        FROM track_statistics s
        <include refid="wherePersonColumn"/>

    </select>
    <select id="cumulativeStatisticsPersonCount" resultType="Integer" parameterType="HashMap">
        SELECT COUNT(1)
        FROM ( SELECT
        s.companyName AS 'companyName',
        s.companyId AS 'companyId',
        s.groupLevel AS 'groupLevel',
        s.backUserName AS 'backUserName',
        s.uuid AS 'uuid',
        sum(s.totalPrincipal) AS 'totalPrincipal',
        sum(s.realgetTotalPrincipal) AS'realgetTotalPrincipal',
        round(ifnull( sum(s.realgetTotalPrincipal)/ sum(s.totalPrincipal), 0) * 100,2) AS'repaymentProbability',
        sum(s.totalPenalty)AS'totalPenalty',
        sum(s.realgetTotalPenalty)AS'realgetTotalPenalty',
        round(sum(s.realgetTotalPenalty) / sum(s.totalPenalty), 2) AS'penaltyProbability',


        sum(s.handleCount) AS 'handleCount'
        FROM track_statistics s
        <include refid="wherePersonColumn"/>) a
    </select>
    <select id="cumulativeStatisticsCompany" resultType="com.info.web.pojo.TrackStatistics" parameterType="HashMap">
        SELECT
       s.companyName AS 'companyName',
       s.companyId AS 'companyId',
       s.groupLevel AS 'groupLevel',

       sum(s.totalPrincipal) AS 'totalPrincipal',
       sum(s.realgetTotalPrincipal) AS'realgetTotalPrincipal',
round(ifnull( sum(s.realgetTotalPrincipal)/ sum(s.totalPrincipal), 0) * 100,2) AS'repaymentProbability',


       sum(s.totalPenalty)AS'totalPenalty',
       sum(s.realgetTotalPenalty)AS'realgetTotalPenalty',
round(sum(s.realgetTotalPenalty) / sum(s.totalPenalty), 2) AS'penaltyProbability',


       sum(s.handleCount) AS 'handleCount'
        FROM track_statistics s
        <include refid="whereCompanyColumn"/>
    </select>
    <select id="cumulativeStatisticsCompanyCount" resultType="Integer" parameterType="HashMap">
        SELECT COUNT(1)
        FROM ( SELECT
        s.companyName AS 'companyName',
        s.companyId AS 'companyId',
        s.groupLevel AS 'groupLevel',

        sum(s.totalPrincipal) AS 'totalPrincipal',
        sum(s.realgetTotalPrincipal) AS'realgetTotalPrincipal',
        round(ifnull( sum(s.realgetTotalPrincipal)/ sum(s.totalPrincipal), 0) * 100,2) AS'repaymentProbability',


        sum(s.totalPenalty)AS'totalPenalty',
        sum(s.realgetTotalPenalty)AS'realgetTotalPenalty',
        round(sum(s.realgetTotalPenalty) / sum(s.totalPenalty), 2) AS'penaltyProbability',


        sum(s.handleCount) AS 'handleCount'
        FROM track_statistics s
        <include refid="whereCompanyColumn"/>) a
    </select>

    <delete id="delTrackStatistics" parameterType="HashMap">
        DELETE s FROM track_statistics s
        WHERE <![CDATA[ s.createDate >= #{beginTime} ]]>
              <![CDATA[ AND s.createDate <= #{endTime}  ]]>
    </delete>


</mapper>